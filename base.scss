// === Abstract Objects ==================================================== //
@import "abstract/objects/_dimensions";

// === Abstract Structures ================================================= //
@import "abstract/structures/_formal-structures";

// === Concrete Objects ==================================================== //
@import "concrete/objects/_color";

// === Concrete Structures ================================================= //
@import "concrete/structures/_texture";

// === Activities ========================================================== //
@import "activities/_repetition";

// === Relations =========================================================== //
@import "relations/_amount";


// Define placeholder
@mixin define($key, $value) {
    %#{$key} {
        @include rules($value);
    }
}

// Define hover styles
@mixin hover($key, $value) {
    &:hover {
        @include rules($value);
    }
}

// Print rule
@mixin rule($key, $value) {
    #{$key} : $value;
}

// Print rules
@mixin rules($name, $rules) {
    @each $key, $value in $rules {
        @if(str-index($key, '_') == 1) {
            //@include #{str-slice($key, 2)}($name, $value);
        } @else if(type-of($value) == "map") {
            @include rules($name + '-' + $key, $value);
        } @else {
            @include rule($key, $value);
        }
    }
}

// Define component
@include rules('button', (
    _define : (
        background : #fff,
        color : #111,
        padding : 0.5em 1em,
        border-width : 1px,
        _hover : (
            background : #eee,
        )
    ),
));

@mixin getRule ($bemClass, $args,$rule: null) {
  @if $rule == null {
    $rule = #{'.'}#{$bemClass};
  }

  #{$rule} {
    //@include #{'base-'}#{$bemClass}($args);
    @content;
  }
}


.banner {
  text-align: center;
  font-size: 14px;
}

@mixin define-response($name: null) {
  $smResp: "#{$name}--sm";
  $mdResp: "#{$name}--md";
  %#{$name} {
    @media (min-width: 801px) {
      %#{$smResp} {
        @content;
      }
    }
    @media (min-width: 992px) {
      %#{$mdResp} {
        @content;
      }
    }
  }
}

@mixin responses($collection: ()) {
	@each $el in $collection {
		@extend %#{$el};
	}
	@content;
}


@include define-response($name: "banner") {
  color: #fff;
}

.tablet {
  @include responses((
    banner--sm,
    banner--md
  ));

  @extend %banner;
}
